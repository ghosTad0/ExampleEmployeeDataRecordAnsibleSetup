---
- name: Deploy web application
  hosts: webservers
  become: yes
  vars:
    app_name: my_web_app
    app_src: /path/to/your/app/source
    app_dest: /var/www/html
    app_user: www-data
    app_group: www-data

  tasks:
    - name: Ensure the application directory exists
      file:
        path: "{{ app_dest }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"

    - name: Copy application files
      copy:
        src: "{{ app_src }}/"
        dest: "{{ app_dest }}/"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - nginx
        - python3
        - python3-pip

    - name: Copy Nginx configuration
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app_name }}
        mode: '0644'

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Install Python dependencies
      pip:
        requirements: "{{ app_src }}/requirements.txt"
        virtualenv: "{{ app_dest }}/venv"
        virtualenv_python: python3

    - name: Start application (example with Gunicorn)
      command: "{{ app_dest }}/venv/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 wsgi:application"
      args:
        chdir: "{{ app_dest }}"
      register: gunicorn_output

    - name: Debug Gunicorn output
      debug:
        var: gunicorn_output
