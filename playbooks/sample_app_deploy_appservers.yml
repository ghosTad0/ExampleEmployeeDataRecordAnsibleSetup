---
- name: SampleApp Deploy Playbook for AppServers
  hosts: appservers
  vars_files:
    - ../vars/deploy_sample_app_vars.yml
    - ../vars/common_vars.yml
    - ../vars/setup_mysql_in_docker_vars.yml
  become: yes
  tasks:

    - name: Checking docker setup of mysql
      ansible.builtin.shell:
        cmd: docker ps
      ignore_errors: yes
      register: mysql_docker_installation_details

    - name: mysql container not found scenario, task execution
      block:
        - name: setting up mysql and required dbs, task execution
          block:
            - name: Starting mysql_docker container (if not already running)
              become: no  # it's a bash alias for the cloud-user profile. it wont be there for "root"
              ansible.builtin.shell:
                cmd: docker compose -f {{ docker_compose_file_directory }}/mysql_docker_compose.yml up -d

            - pause:
                seconds: 15

            - name: Check the existance of sample app database
              ansible.builtin.shell:
                cmd: docker exec -it mysql_docker mysql -u user -ppassword -e "show databases"
              register: mysql_db_list

            - name: Create the db required for sample app only when it's not there
              ansible.builtin.shell:
                cmd:  docker exec -it mysql_docker mysql -u user -ppassword -e "CREATE DATABASE employee_app_db;"
              register: create_db_init_attempt_status
              when: not 'employee_app_db' in mysql_db_list.stdout
              ignore_errors: yes

            - name: Granting db create previleges (if not)
              ansible.builtin.shell:
                cmd: docker exec -it mysql_docker mysql -u root -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'user'@'%';"
              when: create_db_init_attempt_status.failed | default(False)

            - name: Create the db required for sample app retry
              ansible.builtin.shell:
                cmd:  docker exec -it mysql_docker mysql -u user -ppassword -e "CREATE DATABASE employee_app_db;"
              when: create_db_init_attempt_status.failed | default(False)
          when: "'mysql_docker' not in mysql_docker_installation_details.stdout"
      when: not mysql_docker_installation_details.failed

    - name: mysql container already running scenario, task execution
      block:
        - name: mysql docker container found prompt
          debug:
            msg: mysql is already running on docker!
          when: "'mysql_docker' in mysql_docker_installation_details.stdout"
      when: not mysql_docker_installation_details.failed

    - name: mysql container details get status detail log
      debug:
        msg: Listing docker containers failed. Something wrong with docker installation
      when: mysql_docker_installation_details.failed
        